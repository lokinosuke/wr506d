"use strict";
const pg = require('pg');
const adapter_1 = require('./adapter');
const client_1 = require('./client');
class Connection extends adapter_1.Adapter {
    /**
     * Create new connection object
     */
    constructor(config) {
        super();
        this.config = config;
        this.pool = pg.pools.getOrCreate(config);
    }
    /**
     * Acquire client from pool
     */
    acquire() {
        return new Promise((resolve, reject) => {
            this.pool.acquire((err, client) => {
                let done = this.pool.release.bind(this.pool, client);
                err ? reject(err) : resolve(new client_1.Client(client, done));
            });
        });
    }
    /**
     * Create standalone client
     */
    client() {
        return new Promise((resolve, reject) => {
            let client = new pg.Client(this.config);
            client.connect(function (err) {
                err ? reject(err) : resolve(new client_1.Client(client));
            });
        });
    }
    /**
     * Disconnect all pooled clients
     */
    end() {
        this.pool.destroyAllNow();
    }
    /**
     * Run query and return raw result set
     */
    run(text, values) {
        let query = typeof (text) === 'string' ? { text: text, values } : text;
        return new Promise((resolve, reject) => {
            this.pool.acquire((err, client) => {
                if (err)
                    return reject(err);
                client.query(query, (err, res) => {
                    this.pool.release(client);
                    if (err) {
                        Object.assign(err, { query: { text: query.text, values: query.values } });
                        reject(err);
                    }
                    else {
                        resolve(res);
                    }
                });
            });
        });
    }
}
exports.Connection = Connection;
//# sourceMappingURL=connection.js.map